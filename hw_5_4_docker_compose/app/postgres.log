C:\Python\Модуль 5. Python в веб-разработке\hw\my-hw-py-web\hw_5_4_docker_compose\app>docker-compose up
Creating network "app_default" with the default driver
Creating app_db_1 ... done
Creating app_web_1 ... done
Attaching to app_db_1, app_web_1
db_1   | The files belonging to this database system will be owned by user "postgres".
db_1   | This user must also own the server process.
db_1   |
db_1   | The database cluster will be initialized with locale "en_US.utf8".
db_1   | The default database encoding has accordingly been set to "UTF8".
db_1   | The default text search configuration will be set to "english".
db_1   |
db_1   | Data page checksums are disabled.
db_1   |
db_1   | fixing permissions on existing directory /var/lib/postgresql/data ... ok
db_1   | creating subdirectories ... ok
db_1   | selecting default max_connections ... 100
db_1   | selecting default shared_buffers ... 128MB
db_1   | selecting dynamic shared memory implementation ... posix
db_1   | creating configuration files ... ok
db_1   | running bootstrap script ... ok
db_1   | performing post-bootstrap initialization ... sh: locale: not found
db_1   | 2021-10-25 12:42:45.250 UTC [27] WARNING:  no usable system locales were found
db_1   | ok
db_1   | syncing data to disk ... ok
db_1   |
db_1   | Success. You can now start the database server using:
db_1   |
db_1   |     pg_ctl -D /var/lib/postgresql/data -l logfile start
db_1   |
db_1   |
db_1   | WARNING: enabling "trust" authentication for local connections
db_1   | You can change this by editing pg_hba.conf or using the option -A, or
db_1   | --auth-local and --auth-host, the next time you run initdb.
db_1   | waiting for server to start....2021-10-25 12:42:48.918 UTC [31] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
db_1   | 2021-10-25 12:42:49.360 UTC [32] LOG:  database system was shut down at 2021-10-25 12:42:45 UTC
db_1   | 2021-10-25 12:42:49.468 UTC [31] LOG:  database system is ready to accept connections
db_1   |  done
db_1   | server started
web_1  | Traceback (most recent call last):
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 219, in ensure_connection
web_1  |     self.connect()
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
web_1  |     return func(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 200, in connect
web_1  |     self.connection = self.get_new_connection(conn_params)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
web_1  |     return func(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 187, in get_new_connection
web_1  |     connection = Database.connect(**conn_params)
web_1  |   File "/usr/local/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
web_1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
web_1  | psycopg2.OperationalError: could not connect to server: Connection refused
web_1  |        Is the server running on host "db" (192.168.208.2) and accepting
web_1  |        TCP/IP connections on port 5432?
web_1  |
web_1  |
web_1  | The above exception was the direct cause of the following exception:
web_1  |
web_1  | Traceback (most recent call last):
web_1  |   File "/stocks_products/manage.py", line 22, in <module>
web_1  |     main()
web_1  |   File "/stocks_products/manage.py", line 18, in main
web_1  |     execute_from_command_line(sys.argv)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 419, in execute_from_command_line
web_1  |     utility.execute()
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 413, in execute
web_1  |     self.fetch_command(subcommand).run_from_argv(self.argv)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/management/base.py", line 354, in run_from_argv
web_1  |     self.execute(*args, **cmd_options)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/management/base.py", line 398, in execute
web_1  |     output = self.handle(*args, **options)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/management/base.py", line 89, in wrapped
web_1  |     res = handle_func(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/management/commands/migrate.py", line 75, in handle
web_1  |     self.check(databases=[database])
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/management/base.py", line 419, in check
web_1  |     all_issues = checks.run_checks(
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/checks/registry.py", line 76, in run_checks
web_1  |     new_errors = check(app_configs=app_configs, databases=databases)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/core/checks/model_checks.py", line 34, in check_all_models
web_1  |     errors.extend(model.check(**kwargs))
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 1290, in check
web_1  |     *cls._check_indexes(databases),
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/models/base.py", line 1682, in _check_indexes
web_1  |     connection.features.supports_covering_indexes or
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/utils/functional.py", line 48, in __get__
web_1  |     res = instance.__dict__[self.name] = self.func(instance)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/features.py", line 93, in is_postgresql_11
web_1  |     return self.connection.pg_version >= 110000
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/utils/functional.py", line 48, in __get__
web_1  |     res = instance.__dict__[self.name] = self.func(instance)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 329, in pg_version
web_1  |     with self.temporary_connection():
web_1  |   File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
web_1  |     return next(self.gen)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 603, in temporary_connection
web_1  |     with self.cursor() as cursor:
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
web_1  |     return func(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 259, in cursor
web_1  |     return self._cursor()
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 235, in _cursor
web_1  |     self.ensure_connection()
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
web_1  |     return func(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 218, in ensure_connection
web_1  |     with self.wrap_database_errors:
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 90, in __exit__
web_1  |     raise dj_exc_value.with_traceback(traceback) from exc_value
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 219, in ensure_connection
web_1  |     self.connect()
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
web_1  |     return func(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 200, in connect
web_1  |     self.connection = self.get_new_connection(conn_params)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
web_1  |     return func(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 187, in get_new_connection
web_1  |     connection = Database.connect(**conn_params)
web_1  |   File "/usr/local/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
web_1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
web_1  | django.db.utils.OperationalError: could not connect to server: Connection refused
web_1  |        Is the server running on host "db" (192.168.208.2) and accepting
web_1  |        TCP/IP connections on port 5432?
web_1  |
db_1   | CREATE DATABASE
db_1   |
db_1   |
db_1   | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
db_1   |
db_1   | waiting for server to shut down...2021-10-25 12:42:51.370 UTC [31] LOG:  received fast shutdown request
db_1   | .2021-10-25 12:42:51.460 UTC [31] LOG:  aborting any active transactions
db_1   | 2021-10-25 12:42:51.460 UTC [31] LOG:  background worker "logical replication launcher" (PID 38) exited with exit code 1
db_1   | 2021-10-25 12:42:51.461 UTC [33] LOG:  shutting down
db_1   | 2021-10-25 12:42:52.239 UTC [31] LOG:  database system is shut down
db_1   |  done
db_1   | server stopped
db_1   |
db_1   | PostgreSQL init process complete; ready for start up.
db_1   |
db_1   | 2021-10-25 12:42:52.446 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
db_1   | 2021-10-25 12:42:52.446 UTC [1] LOG:  listening on IPv6 address "::", port 5432
db_1   | 2021-10-25 12:42:52.684 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
db_1   | 2021-10-25 12:42:52.935 UTC [42] LOG:  database system was shut down at 2021-10-25 12:42:52 UTC
db_1   | 2021-10-25 12:42:53.033 UTC [1] LOG:  database system is ready to accept connections
web_1  |
web_1  | 161 static files copied to '/stocks_products/static'.
web_1  | [2021-10-25 12:42:57 +0000] [1] [INFO] Starting gunicorn 20.1.0
web_1  | [2021-10-25 12:42:57 +0000] [1] [INFO] Listening at: http://0.0.0.0:8000 (1)
web_1  | [2021-10-25 12:42:57 +0000] [1] [INFO] Using worker: sync
web_1  | [2021-10-25 12:42:57 +0000] [10] [INFO] Booting worker with pid: 10
